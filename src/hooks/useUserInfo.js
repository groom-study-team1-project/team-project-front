import React from 'react';
import useJwt from "./useJwt"; import { useSelector } from "react-redux"; import { useEffect, useState } from "react"; import axiosInstance from "../services/axiosConfig";  const useUserInfo = () => {   const [userInfo, setUserInfo] = useState(null);   const [userError, setUserError] = useState(null);   const [isUserInfoLoading, setIsUserInfoLoading] = useState(true);    const accessToken = useSelector((state) => state.user.userInfo.accessToken);   const isLoggedIn = useSelector((state) => state.user.isLoggedIn);   const payload = useJwt(accessToken);    useEffect(() => {     setIsUserInfoLoading(true);      if (!isLoggedIn || !payload?.memberId) {       setUserInfo(null);       setIsUserInfoLoading(false);       return;     }      setUserError(null);     const memberId = payload.memberId;      axiosInstance       .get(`/open/members/me/${memberId}`)       .then((response) => {         const userData = response.data.result;         if (userData && userData.id) {           setUserInfo(userData);         } else {           console.error("? íš¨??? ì? ?•ë³´ë¥?ê°€?¸ì˜¤ì§€ ëª»í–ˆ?µë‹ˆ??");           setUserInfo(null);         }       })       .catch((error) => {         setUserError(error.message);         console.error("? ì? ?•ë³´ ë¶ˆëŸ¬?¤ê¸° ?¤íŒ¨ : ", error);         setUserInfo(null);       })       .finally(() => {         setIsUserInfoLoading(false);       });   }, [isLoggedIn, payload?.memberId]);    return { userInfo, isUserInfoLoading }; };  export default useUserInfo;
